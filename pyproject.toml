[project]
name = "graphmatchingtools"
version = "0.9.0"
authors = [
    { name = "François-Xavier Dupé", email = "francois-xavier.dupe@univ-amu.fr" },
    { name = "Rohit Yadav", email = "rohit.yadav@univ-amu.fr" },
    { name = "Guillaume Auzias", email = "guillaume.auzais@univ-amu.fr" },
    { name = "Sylvain Takerkart", email = "sylvain.takerkart@univ-amu.fr" },
]
dynamic = ["dependencies", "readme"]
description = "Unsupervised multiple graphs matching methods"
requires-python = ">=3.10"
keywords = ["graph matching", "multiway matching", "multigraph matching", "pairwise matching"]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3",
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[project.optional-dependencies]
dev = [
    "pytest >= 7.0",
    "pytest-cov >= 3.0",
    "coverage >= 6.0",
    "sphinx >= 6.0",
    "sphinx-autoapi >= 2.0",
    "furo >= 2022.12.7",
    "tox >= 4.0",
    "black >= 23.12.1",
    "pre-commit >= 3.2.0",
]
demos = [
    "torch_geometric >= 2.4.0",
    "torch-cluster >= 1.6.0",
    "torch-sparse >= 0.6.0",
    "torch-scatter >= 2.1.0"
]

[project.scripts]
gmt_demo_pytorchdata = "graph_matching_tools.scripts.gmt_demo_pytorchdata:main"
gmt_demo_randomgraph = "graph_matching_tools.scripts.gmt_demo_randomgraph:main"
#gmt_demo_kmeans = "graph_matching_tools.scripts.gmt_demo_kmeans:main"
#gmt_demo_intgraph = "graph_matching_tools.scripts.gmt_demo_intgraph:main"
#gmt_demo_selflearning = "graph_matching_tools.scripts.gmt_demo_selflearning:main"

[project.urls]
"Homepage" = "https://github.com/fxdupe/graphmatchingtools"
"Bug Tracker" = "https://github.com/fxdupe/graphmatchingtools/issues"

[build-system]
requires = [
    "setuptools >= 69",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
exclude = ["test*"]
namespaces = false

[tool.setuptools.dynamic]
readme = {file = "README.md"}
dependencies = {file = "requirements.txt"}

[tool.coverage.run]
branch = true
omit = [
    # omit anything in a .local directory anywhere
    "*/.local/*",
    # omit everything in /usr
    "/usr/*",
    # omit this single file
    "tests/*",
    # omit demos
    "graph_matching_tools/demos/*",
    # omit GAE for the moment
    "graph_matching_tools/learning/GAE.py",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
skip_covered = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--cov=graph_matching_tools"

[tool.poetry]
name = "Graph Matching Tools"
version = "0.9.0"
description = "Tools for multiple graph matching with coherence"
license = "MIT"
readme = "README.md"
authors = [
    "François-Xavier Dupé <francois-xavier.dupe@univ-amu.fr>",
    "Rohit Yadav <rohit.yadav@univ-amu.fr>",
    "Guillaume Auzias <guillaume.auzais@univ-amu.fr>",
    "Sylvain Takerkart <sylvain.takerkart@univ-amu.fr>",
]
keywords = ["graph matching", "multiway matching", "multigraph matching", "pairwise matching"]
packages = [{include = "graph_matching_tools"},]

[tool.poetry.dependencies]
python = ">=3.10, <3.13"
numpy = "^1.10.0"
scipy = "^1.7.0"
networkx = "^2.7.0"
scikit-learn = "^1.0.0"
jax = "^0.4.0"
jaxlib = "^0.4.0"
matplotlib = "^3.5.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-cov = "^3.0"
coverage = "^6.0"
sphinx = "^7.0"
sphinx-autoapi = "^2.0"
furo = ">=2022.12.7"
tox = "^4.0"
black = ">=23.12.1"
pre-commit = "^3.2.0"

[tool.poetry.group.demos]
optional = true

[tool.poetry.group.demos.dependencies]
torch_geometric = "^2.4.0"
torch-cluster = "^1.6.3"
torch-sparse = "^0.6.10"
torch-scatter = "^2.1.0"
